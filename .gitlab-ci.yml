.test:linux:x64:
  stage: test
  tags: [x64, linux, docker]
  before_script:
    - 'cd /usr/local/lib && { curl --fail -o libobjectbox.so -H "PRIVATE-TOKEN: $CI_API_TOKEN" "${OBXLIB_URL_Linux64}" ; ldconfig ; cd - ; }'
  script:
    - ./build/build.sh

# minimal supported Go version is 1.11.4
test:linux:x64:go1.11.4:
  extends: .test:linux:x64
  image: golang:1.11.4
  script:
    - ./build/build.sh -test.short

test:linux:x64:go1.12:
  extends: .test:linux:x64
  image: golang:1.12
  script:
    - ./build/build.sh -test.short

test:linux:x64:go1.13:
  extends: .test:linux:x64
  image: golang:1.13

test:linux:x64:go1.14:
  extends: .test:linux:x64
  image: golang:1.14

test:linux:x64:go1.15:
  extends: .test:linux:x64
  image: golang:1.15

test:linux:ARMv7hf:
  stage: test
  image: golang
  tags: [armv7hf, linux, docker]
  script:
    - 'cd /usr/local/lib && { curl --fail -o libobjectbox.so -H "PRIVATE-TOKEN: $CI_API_TOKEN" "${OBXLIB_URL_LinuxARMv7hf}" ; ldconfig ; cd - ; }'
    - ./build/build.sh -test.short

test:mac:x64:
  stage: test
  tags: [x64, mac, go]
  script:
    - 'curl --fail -o /usr/local/lib/libobjectbox.dylib -H "PRIVATE-TOKEN: $CI_API_TOKEN" "$OBXLIB_URL_Mac64"'
    - ./build/build.sh

test:win:x64:
  stage: test
  tags: [x64, windows, go]
  script:
    - libDir=$(realpath $(dirname $(which gcc))/../lib)
    - 'curl --fail -o $libDir/objectbox.dll -H "PRIVATE-TOKEN: $CI_API_TOKEN" "$OBXLIB_URL_Win64"'
    - ./build/build.sh