.test:
  stage: test
  script:
    - bash <(curl -s https://raw.githubusercontent.com/objectbox/objectbox-c/main/download.sh) --quiet --sync 0.13.0
    - export CGO_LDFLAGS="-L$(pwd -P)/lib -Wl,-rpath -Wl,$(pwd -P)/lib"
    - ./build/build.sh ${BUILD_ARGS:-}

test:linux:x64:old:
  extends: .test
  tags: [x64, linux, docker]
  image: golang:$GOVERSION
  parallel:
    matrix:
      - GOVERSION: [ '1.11.4', '1.12' ]
        BUILD_ARGS: -test.short
  before_script:
    - rm go.sum   # issues with checksum mismatch, if anyone still uses old Go, they may need to delete go.sum

test:linux:x64:
  extends: .test
  tags: [x64, linux, docker]
  image: golang:$GOVERSION
  parallel:
    matrix:
      - GOVERSION: [ '1.13', '1.14', '1.15', '1.16' ]

test:linux:ARMv7hf:
  extends: .test
  image: golang
  tags: [armv7hf, linux, docker]
  variables:
    BUILD_ARGS: -test.short

test:mac:x64:
  extends: .test
  tags: [x64, mac, go]

test:win:x64:
  extends: .test
  tags: [x64, windows, go]
  before_script:
    - rm go.sum   # issues with checksum mismatch, if anyone still uses old Go, they may need to delete go.sum